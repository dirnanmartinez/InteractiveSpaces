version: '3.4'

services:
 interactivespaces:
    container_name: interactivespaces
    #we can set different variables to control the setting of the service
    environment:
      # Set ASPNETCORE_ENVIRONMENT=Development to get errors while testing. 
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:81
    #Name of the image that will be used for the service. 
    #Docker_registry is used to refer to the local docker registry
    image: ${DOCKER_REGISTRY-}interactivespaces
    #Configuration options that are applied at build time.
    build:
      #Either a path to a directory containing a Dockerfile, or a url to a git repository.
      context: .
      dockerfile: InteractiveSpaces\Dockerfile
    ports:
        #host port: container port
      - 3001:81
      #- 3031:441
    depends_on:
      #it needs the container sqldata   
      - sqldata
    #unless-stopped always restarts a container, except when the container is stopped (manually or otherwise).
    restart: unless-stopped



 sqldata:
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Pa55w0rd2021
    image: mcr.microsoft.com/mssql/server:2019-CU13-ubuntu-20.04
    ports:
        #host port: container port
      - 1433:1433
    #Volumes are the preferred mechanism for persisting data generated by and used by Docker containers
    #This alternative facilitates the volume persists despite removing the container
    volumes:
      - sqlserver:/var/opt/mssql
    restart: unless-stopped

volumes:
  sqlserver:

#How to run docker-compose recreating the images
#docker-compose up --force-recreate --build -d

